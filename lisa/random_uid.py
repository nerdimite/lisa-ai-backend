import random
from typing import List

# Word lists for generating readable IDs
ADJECTIVES: List[str] = [
    "autumn",
    "hidden",
    "bitter",
    "misty",
    "silent",
    "empty",
    "dry",
    "dark",
    "summer",
    "icy",
    "delicate",
    "quiet",
    "white",
    "cool",
    "spring",
    "winter",
    "patient",
    "twilight",
    "dawn",
    "crimson",
    "wispy",
    "weathered",
    "blue",
    "billowing",
    "broken",
    "cold",
    "damp",
    "falling",
    "frosty",
    "green",
    "long",
    "late",
    "lingering",
    "bold",
    "little",
    "morning",
    "muddy",
    "old",
    "red",
    "rough",
    "still",
    "small",
    "sparkling",
    "throbbing",
    "shy",
    "wandering",
    "withered",
    "wild",
    "black",
    "young",
    "holy",
    "solitary",
    "fragrant",
    "aged",
    "snowy",
    "proud",
    "floral",
    "restless",
    "divine",
    "polished",
    "ancient",
    "purple",
    "lively",
    "nameless",
]

POLITE_ADJECTIVES: List[str] = [
    "adorable",
    "alert",
    "amazing",
    "ambitious",
    "amusing",
    "appreciative",
    "authentic",
    "balanced",
    "beautiful",
    "brilliant",
    "calm",
    "capable",
    "caring",
    "charismatic",
    "charming",
    "cheerful",
    "clean",
    "clear",
    "clever",
    "comfortable",
    "confident",
    "cooperative",
    "courageous",
    "creative",
    "curious",
    "dazzling",
    "dedicated",
    "deep",
    "delightful",
    "determined",
    "diligent",
    "diplomatic",
    "discreet",
    "dynamic",
    "eager",
    "efficient",
    "elegant",
    "eloquent",
    "enchanting",
    "encouraging",
    "energetic",
    "enthusiastic",
    "ethical",
    "excellent",
    "exciting",
    "fair",
    "faithful",
    "fantastic",
    "fearless",
    "friendly",
    "generous",
    "gentle",
    "glorious",
    "gracious",
    "harmonious",
    "helpful",
    "honest",
    "honorable",
    "hopeful",
    "humble",
    "imaginative",
    "incredible",
    "innovative",
    "inspiring",
    "intelligent",
    "intuitive",
    "inventive",
    "joyful",
    "kind",
    "knowledgeable",
    "logical",
    "loving",
    "loyal",
    "magnificent",
    "marvelous",
    "mature",
    "meaningful",
    "methodical",
    "meticulous",
    "modest",
    "motivated",
    "natural",
    "noble",
    "optimistic",
    "passionate",
    "patient",
    "peaceful",
    "perceptive",
    "persistent",
    "pioneering",
    "playful",
    "pleasant",
    "polite",
    "popular",
    "practical",
    "precise",
    "principled",
    "profound",
    "protective",
    "proud",
    "punctual",
    "pure",
    "rational",
    "realistic",
    "reflective",
    "reliable",
    "remarkable",
    "respectful",
    "responsible",
    "romantic",
    "selfless",
    "sensitive",
    "sincere",
    "skillful",
    "smart",
    "sociable",
    "splendid",
    "steadfast",
    "stimulating",
    "strategic",
    "stunning",
    "successful",
    "supportive",
    "surprising",
    "talented",
    "thoughtful",
    "tidy",
    "trustworthy",
    "unique",
    "upbeat",
    "versatile",
    "vibrant",
    "victorious",
    "virtuous",
    "vivacious",
    "warm",
    "wise",
    "witty",
    "wonderful",
]

NOUNS: List[str] = [
    "waterfall",
    "river",
    "breeze",
    "moon",
    "rain",
    "wind",
    "sea",
    "morning",
    "snow",
    "lake",
    "sunset",
    "pine",
    "shadow",
    "leaf",
    "dawn",
    "glitter",
    "forest",
    "hill",
    "cloud",
    "meadow",
    "sun",
    "glade",
    "bird",
    "brook",
    "butterfly",
    "bush",
    "dew",
    "dust",
    "field",
    "fire",
    "flower",
    "firefly",
    "feather",
    "grass",
    "haze",
    "mountain",
    "night",
    "pond",
    "darkness",
    "snowflake",
    "silence",
    "sound",
    "sky",
    "shape",
    "surf",
    "thunder",
    "violet",
    "water",
    "wildflower",
    "wave",
    "water",
    "resonance",
    "sun",
    "wood",
    "dream",
    "cherry",
    "tree",
    "fog",
    "frost",
    "voice",
    "paper",
    "frog",
    "smoke",
    "star",
]

ANIMALS: List[str] = [
    "alligator",
    "ant",
    "bear",
    "bee",
    "bird",
    "camel",
    "cat",
    "cheetah",
    "chicken",
    "chimpanzee",
    "cow",
    "crocodile",
    "deer",
    "dog",
    "dolphin",
    "duck",
    "eagle",
    "elephant",
    "fish",
    "fly",
    "fox",
    "frog",
    "giraffe",
    "goat",
    "goldfish",
    "hamster",
    "hippopotamus",
    "horse",
    "kangaroo",
    "kitten",
    "lion",
    "lobster",
    "monkey",
    "octopus",
    "owl",
    "panda",
    "penguin",
    "pig",
    "puppy",
    "rabbit",
    "rat",
    "scorpion",
    "seal",
    "shark",
    "sheep",
    "snail",
    "snake",
    "spider",
    "squirrel",
    "tiger",
    "turtle",
    "wolf",
    "zebra",
]


def random_noun() -> str:
    """Return a random noun from the list"""
    return random.choice(NOUNS).lower()


def random_animal() -> str:
    """Return a random animal from the list"""
    return random.choice(ANIMALS).lower()


def random_adjective() -> str:
    """Return a random adjective from the list"""
    return random.choice(ADJECTIVES).lower()


def random_polite_adjective() -> str:
    """Return a random polite adjective from the list"""
    return random.choice(POLITE_ADJECTIVES).lower()


def random_namepair() -> str:
    """Generate an adjective-noun pair"""
    return f"{random_adjective()}-{random_noun()}"


def random_polite_animalpair() -> str:
    """Generate a polite-adjective-animal pair"""
    return f"{random_polite_adjective()}-{random_animal()}"


def generate_random_uid() -> str:
    """
    Generate a random, human-readable unique identifier

    Returns:
        A string in the format "adjective-noun-number" or "polite-adjective-animal-number"
    """
    if random.random() < 0.5:
        adjective_noun_pair = random_namepair()
    else:
        adjective_noun_pair = random_polite_animalpair()

    return f"{adjective_noun_pair}-{random.randint(100, 999)}"
